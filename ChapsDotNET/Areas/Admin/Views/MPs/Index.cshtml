@using ChapsDotNET.Common.Helpers

@model ChapsDotNET.Business.Models.Common.PagedResult<List<ChapsDotNET.Business.Models.MPModel>>

@{
    ViewData["Title"] = "Members of Parliament administration";
}

@section head{
    <link href="@Url.Content("~/Content/newPagedListButtons.css")" rel="stylesheet" type="text/css" media="screen" />
}

<div class="breadcrumbs">
    <a href="">Home</a>
    &nbsp;>&nbsp;
    <a href="">Administration</a>
</div>

<h1>Members of Parliament (MPs)</h1>

<div class="actionLinks">
    @Html.ActionLink("Add a new member of Parliament", "Create", "MPs")
</div>

<div class="flex-container">
    <section class="filters">
        @using (Html.BeginForm(null, null, FormMethod.Get, new { @class = "filter", novalidate = "novalidate" }))
            {
            <fieldset>
                <legend class="caption">
                    Filter
                </legend>
                <label class="editor-label" for="NameFilterTerm">
                    Name contains:
                </label>
                <div class="editor-field">
                    @Html.EditorFor( model => model.NameFilterTerm, new { htmlAttributes = new { AccessKey = "F" } } )
                </div>

                <label class="editor-label" for="AddressFilterTerm">
                    Address contains
                </label>
                <div class="editor-field">
                    @Html.EditorFor(model => model.AddressFilterTerm, new { htmlAttributes = new { AccessKey = "F" } })
                </div>

                <label class="editor-label" for="EmailFilterTerm">
                    Email address contains
                </label>
                <div class="editor-field">
                    @Html.EditorFor(model => model.EmailFilterTerm, new { htmlAttributes = new { AccessKey = "F" } })
                </div>

                <label class="editor-label" for="ActiveFilter">
                    Active only
                </label>
                <div class="editor-field">
                    @Html.CheckBoxFor(model => model.ActiveFilter, new { htmlAttributes = new { AccessKey = "F" } })
                </div>

                @*@Html.Hidden("SortOrder", null)*@

                <button alt="Filter MPs" type="submit">Apply filter</button>

                <a class="reset" href="">Clear filters</a>

            </fieldset>
        }
    </section>
    <section class="mainContent">
        @if (Model.Results!.Count > 0)
        {
            <table class="withSort">
                <caption class="caption">Members of Parliament</caption>
                <thead>
                    <tr>
                        <th scope="col">
                            Name
                        </th>
                        <th scope="col">
                            Address
                        </th>
                        <th scope="col">
                            Email
                        </th>
                        <th scope="col">
                            Active
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var mp in Model.Results!.ToList())
                    {
                        <tr>
                            <td>
                                <a href="/Admin/MPs/Edit/@mp.MPId">
                                    @Html.DisplayFor(modelItem => mp.DisplayFullName)
                                </a>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => mp.DisplaySingleLineAddress)
                            </td>
                            <td>
                                @if (!string.IsNullOrWhiteSpace(mp.Email))
                                {
                                    @Html.DisplayFor(x => mp.Email)
                                }
                            </td>
                            <td align="center">
                                @Html.DisplayFor(x => mp.Active)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="pagination">
                @Html.PageLinks(
                    @Model, x => Url.Action(
                        "Index", new
                             {
                            page = x.ToString(),
                            NameFilterTerm = Model.NameFilterTerm,
                            AddressFilterTerm = Model.AddressFilterTerm,
                            EmailFilterTerm = Model.EmailFilterTerm,
                            ActiveFilter = Model.ActiveFilter
                        }
                    )
                )
            </div>
        }
        else
        {
            <div class="alert comment">
                <span class="comment">No records matched your criteria</span>
            </div>
        }
    </section>
</div>
