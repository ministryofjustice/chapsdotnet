@using ChapsDotNET.Models
@model IndexViewModel

@{
    ViewData["Title"] = "Members of Parliament administration";
}
@section head{
    <link href="@Url.Content("~/stylesheets/newPagedListButtons.css")" rel="stylesheet" type="text/css" media="screen" />
    <script defer src="~/javascripts/MPfilter.js"></script>
}
<body data-mps-url="@Url.Action("GetFilteredMPs", "MPs")">
    <script type="text/javascript">
        var initialPaginationData = {
            currentPage: @Model.Pagination!.CurrentPage,
            totalPages: @Model.Pagination!.TotalPages
        };
        let currentPage = @Model.Pagination!.CurrentPage;
        let sortOrder = '@Model.MPs!.sortOrder';
    </script>

    @Html.AntiForgeryToken()
    <div class="breadcrumbs">
        <h6>
            @Html.ActionLink("Home", "Index", "Home", new { area = "" }, null)
            &nbsp;>&nbsp;
            @Html.ActionLink("Administration", "Index", "Admin")
            > MPs
        </h6>
    </div>

    <h1>Members of Parliament (MPs)</h1>

    <div class="actionLinks">
        @Html.ActionLink("Add a new member of Parliament", "Create", "MPs")
    </div>

    <table class="withSort">
        <caption class="caption">Members of Parliament</caption>
        <colgroup>
            <col class="nameColumn" />
            <col class="addressColumn" />
            <col class="emailColumn" />
            <col class="activeColumn" />
        </colgroup>
        <thead>
            <tr>
                <th>
                    <input type="text" id="nameFilter" placeholder="Filter Name" value="@Model.MPs.nameFilterTerm" />
                </th>
                <th>
                    <input type="text" id="addressFilter" placeholder="Filter Address" />
                </th>
                <th>
                    <input type="text" id="emailFilter" placeholder="Filter Name" />
                </th>
                <th>
                    <input type="checkbox" id="onlyActive" /> Active?
                </th>
            </tr>
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Address</th>
                <th scope="col">Email</th>
                <th scope="col">Active</th>
            </tr>
        </thead>
        <tbody id="mpListContainer">
            @foreach (var mp in Model.MPs.Results!.ToList())
            {
                <tr>
                    <td>
                        <a href="/Admin/MPs/Edit/@mp.MPId">
                            @Html.DisplayFor(modelItem => mp.DisplayFullName)
                        </a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => mp.DisplaySingleLineAddress)
                    </td>
                    <td>
                        @if (!string.IsNullOrWhiteSpace(mp.Email))
                        {
                            @Html.DisplayFor(x => mp.Email)
                        }
                    </td>
                    <td align="center">
                        @Html.DisplayFor(x => mp.Active)
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="pagination">
        <div class="pagination-page-text">
            <span> Page </span>
            <span id="currentPageSpan">@Model.Pagination.CurrentPage</span>
            <span> of </span>
            <span id="totalPagesSpan">@Model.Pagination.TotalPages</span>
        </div>


        <div class="buttons-page-links">
            <!-- first, previous buttons and page links-->
            <a href="#" id="firstButton" class="pageButton-img-first-enabled"></a>
            <a href="#" id="prevButton" class="pageButton-img-previous-enabled"></a>

            <!-- Page Numbers Container -->
            <div id="pageLinksContainer">
                <!-- This will be filled dynamically by JavaScript -->
            </div>

            <!--Page text,  Next and Last buttons  -->
            <a href="#" id="nextButton" class="pageButton-img-next-enabled"></a>
            <a href="#" id="lastButton" class="pageButton-img-last-enabled"></a>
        </div>

    </div>
</body>
