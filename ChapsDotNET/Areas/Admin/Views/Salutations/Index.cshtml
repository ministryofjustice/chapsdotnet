@model ChapsDotNET.Models.SalutationsAdminViewModel
@using ChapsDotNET.Common.Helpers
@using ChapsDotNET.Frontend.Components.Alert
@using ChapsDotNET.Frontend.Components.Breadcrumbs
@using ChapsDotNET.Frontend.Components.Button
@using ChapsDotNET.Frontend.Components.Heading
@using ChapsDotNET.Frontend.Components.Pagination
@using ChapsDotNET.Frontend.Components.Table

@{
    ViewData["Title"] = "Salutations administration";

    // Results data
    var data = Model.Salutations!;
    var results = data.Results;
    var resultsTotal = data.RowCount;
    var currentPage = data.CurrentPage;
    var pageSize = data.PageSize;
    var pageCount = data.PageCount;
    var resultsFrom = PaginationModel.GetResultsFrom(currentPage, pageSize).ToString();
    var resultsTo = PaginationModel.GetResultsTo(currentPage, pageSize, results!.Count).ToString();

    // Alert data
    AlertModel? alertModel = Model.Alert;

    // Breadcrumbs
    List<BreadcrumbModel> breadcrumbs = [
                new BreadcrumbModel { Label = "Home", Url = Url.Action("Index", "Home", new {area =""})!},
                new BreadcrumbModel { Label = "Admin", Url = Url.Action("Index", "Admin", new {area =""})!},
    ];
    var breadcrumbsModel = new BreadcrumbsModel(breadcrumbs);

    // Heading
    var headingModel = new HeadingModel { Title = "Salutations", Button = new ButtonModel { Element = ButtonModel.ValidElementTypes.anchor, Type = ButtonModel.ValidButtonStyles.secondary, Label = "Create a new salutation", Url = Url.Action("Create", "Salutations", new { area = "Admin" }) } };

    // Table
    //// Table headers
    List<HeaderCell> headers = [
        new HeaderCell { Content = "Title",  Scope = RowScopes.col},
        new HeaderCell { Content = "Status", Scope = RowScopes.col},
    ];

    //// Table body
    var rows = new List<Row>();

    @foreach (var salutation in results)
    {
        var row = new Row
                {
                    RowContent = [
                        new BodyCell {Content = salutation.Detail!, Url = $"/Admin/Salutations/Edit/{salutation.SalutationId}"},
                        new BodyCell {Content = salutation.Active ? "Active" : "Deactivated", TagColour = salutation.Active ? TagColours.blue : TagColours.grey }
                    ]
                };
        rows.Add(row);
    }

    var tableModel = new TableModel { Caption = "Existing salutations", HeaderData = headers, BodyData = rows, ResultsTotal = resultsTotal.ToString(), ResultsFrom = resultsFrom, ResultsTo = resultsTo };

    // Pagination
    var paginationModel = new PaginationModel { PageSize = pageSize, CurrentPage = currentPage, TotalCount = resultsTotal, PageCount = pageCount };
}

<partial name="Breadcrumbs" model="breadcrumbsModel" />
@if (alertModel != null)
{
    <partial name="Alert" model="alertModel" />
}
<partial name="Heading" model="headingModel" />
<partial name="Table" model="tableModel" />
<partial name="Pagination" model="paginationModel" />
