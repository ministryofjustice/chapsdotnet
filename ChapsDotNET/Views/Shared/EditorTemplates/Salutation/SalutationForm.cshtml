@model SalutationViewModel

@using Microsoft.AspNetCore.Http.Extensions;
@using ChapsDotNET.Business.Interfaces
@using ChapsDotNET.Frontend.Components.Button;

@{
    var submitLabel = ViewData["SubmitLabel"]?.ToString() ?? "Submit";
    var primaryButtonModel = new ButtonModel { Label = submitLabel, Element = ButtonModel.ValidElementTypes.input, Type = ButtonModel.ValidButtonStyles.primary, InputType = ButtonModel.ValidButtonTypes.submit };
    var secondaryButtonModel = new ButtonModel { Label = "Cancel", Element = ButtonModel.ValidElementTypes.anchor, Type = ButtonModel.ValidButtonStyles.secondary, Url = Url.Action("Index", "Salutations", new { area = "Admin" }) };

    var legendIsPageTitle = (bool?)ViewData["LegendIsPageTitle"];
}

@using (Html.BeginForm())
{
    <div class="chaps-form">
        <fieldset class="govuk-fieldset">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                @if (legendIsPageTitle == true)
                {
                    <h1 class="govuk-fieldset__heading">@ViewData["Legend"]</h1>
                } 
                else
                {
                    <h2 class="govuk-fieldset__heading">@ViewData["Legend"]</h2>
                }
            </legend>
            @Html.HiddenFor(m => m.SalutationId)
            <!-- Title -->
            <div class="govuk-form-group">
                <div class="chaps-form__label-wrapper">
                    @Html.LabelFor(m => m.Detail, "Title", new { @for = "salutation-title", @class = "govuk-label" })
                </div>
                <div id="salutation-title-hint'" class="govuk-hint">
                    Title must be 10 characters or less
                </div>
                <p id="salutation-title-error-wrapper" class="govuk-error-message">
                    @Html.ValidationMessageFor(m => m.Detail)
                </p>
                @Html.TextBoxFor(m => m.Detail, new { @id = "salutation-title", @name = "salutation-title", @class = "govuk-input govuk-!-width-one-third", @aria_describedby = "salutation-title-hint salutation-title-error-wrapper" })
            </div>
            @if (submitLabel == "Update")
            {
                <!-- Status -->
                <div class="govuk-form-group">
                    <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                        <div class="govuk-checkboxes__item">
                            @Html.CheckBoxFor(m => m.Active, new { @class = "govuk-checkboxes__input", @aria_describedby = "salutation-is-active-error-wrapper" })
                            <div class="chaps-form__label-wrapper">
                                @Html.LabelFor(m => m.Active, "Active", new { @class = "govuk-label govuk-checkboxes__label" })
                            </div>
                            <p id="salutation-is-active-error-wrapper" class="govuk-error-message">
                                @Html.ValidationMessageFor(m => m.Active)
                            </p>
                        </div>
                    </div>
                </div>
            }
        </fieldset>
    <div class="govuk-button-group">
        <partial name="Button" model="@primaryButtonModel" />
        <partial name="Button" model="@secondaryButtonModel" />
    </div>
    </div>
}
