// <auto-generated />
using System;
using ChapsDotNET.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChapsDotNET.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241008162103_AddDotNetAuditsTable_SecondAttempt")]
    partial class AddDotNetAuditsTable_SecondAttempt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

           
            modelBuilder.Entity("ChapsDotNET.Data.Entities.DotNetAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Object")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ObjectPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int?>("RootPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.ToTable("DotNetAudits");
                });

            modelBuilder.Entity("ChapsDotNET.Data.Entities.LeadSubject", b =>
                {
                    b.Property<int>("LeadSubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeadSubjectId"));

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deactivated")
                        .HasColumnType("datetime2");

                    b.Property<string>("deactivatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeadSubjectId");

                    b.ToTable("LeadSubjects");
                });

            modelBuilder.Entity("ChapsDotNET.Data.Entities.MP", b =>
                {
                    b.Property<int>("MPID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MPID"));

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("County")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("FirstNames")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Postcode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("RtHon")
                        .HasColumnType("bit");

                    b.Property<int?>("SalutationID")
                        .HasColumnType("int");

                    b.Property<string>("Suffix")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Town")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<int?>("deactivatedByID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("deactivatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("MPID");

                    b.HasIndex("SalutationID");

                    b.ToTable("MPs");
                });

            modelBuilder.Entity("ChapsDotNET.Data.Entities.MoJMinister", b =>
                {
                    b.Property<int>("MoJMinisterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MoJMinisterID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Rank")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deactivated")
                        .HasColumnType("datetime2");

                    b.Property<string>("deactivatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prefix")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("suffix")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MoJMinisterID");

                    b.ToTable("MoJMinisters");
                });

            modelBuilder.Entity("ChapsDotNET.Data.Entities.PublicHoliday", b =>
                {
                    b.Property<int>("PublicHolidayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublicHolidayID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("PublicHolidayID");

                    b.ToTable("PublicHolidays");
                });

            modelBuilder.Entity("ChapsDotNET.Data.Entities.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LongDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ReportId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("ChapsDotNET.Data.Entities.Role", b =>
                {
                    b.Property<int>("strength")
                        .HasColumnType("int");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("strength");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ChapsDotNET.Data.Entities.Salutation", b =>
                {
                    b.Property<int>("salutationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("salutationID"));

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deactivated")
                        .HasColumnType("datetime2");

                    b.Property<string>("deactivatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("salutationID");

                    b.ToTable("Salutations");
                });

            modelBuilder.Entity("ChapsDotNET.Data.Entities.Team", b =>
                {
                    b.Property<int>("TeamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamID"));

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("deactivated")
                        .HasColumnType("datetime2");

                    b.Property<string>("deactivatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("isOGD")
                        .HasColumnType("bit");

                    b.Property<bool>("isPOD")
                        .HasColumnType("bit");

                    b.HasKey("TeamID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("ChapsDotNET.Data.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<bool>("Changeable")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastActive")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RoleStrength")
                        .HasColumnType("int");

                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("UserID");

                    b.HasIndex("RoleStrength");

                    b.HasIndex("TeamID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChapsDotNET.Data.Entities.CorrespondenceTypesByTeam", b =>
                {
                    b.HasOne("ChapsDotNET.Data.Entities.CorrespondenceType", "CorrespondenceType")
                        .WithMany("Teams")
                        .HasForeignKey("CorrespondenceTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChapsDotNET.Data.Entities.Team", "Team")
                        .WithMany("CorrespondenceTypes")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CorrespondenceType");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("ChapsDotNET.Data.Entities.MP", b =>
                {
                    b.HasOne("ChapsDotNET.Data.Entities.Salutation", null)
                        .WithMany("MPs")
                        .HasForeignKey("SalutationID");
                });

            modelBuilder.Entity("ChapsDotNET.Data.Entities.User", b =>
                {
                    b.HasOne("ChapsDotNET.Data.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleStrength")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChapsDotNET.Data.Entities.Team", "Team")
                        .WithMany("Users")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("ChapsDotNET.Data.Entities.CorrespondenceType", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("ChapsDotNET.Data.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ChapsDotNET.Data.Entities.Salutation", b =>
                {
                    b.Navigation("MPs");
                });

            modelBuilder.Entity("ChapsDotNET.Data.Entities.Team", b =>
                {
                    b.Navigation("CorrespondenceTypes");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
